package com.example.model;
// Generated Apr 25, 2018 6:07:51 PM by Hibernate Tools 3.6.0


import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

/**
 * Store generated by hbm2java
 */
@Entity
@Table(name="store"
    ,catalog="`SPRING-SECURITY-TUTORIAL`"
)
@JsonIgnoreProperties({"hibernateLazyInitializer", "handler"})
public class Store  implements java.io.Serializable {


     private int id;
     private Voucher voucher;
     private User user;
     private Color color;
     private Nature nature;
     private Group group;
     private Model model;
     private Integer storePairs;
     private Integer salsePairs;
     private Date entryDate;
     private Double unitPrice;
     private Double sellUnitPrice;

    public Store() {
    }

	
    public Store(int id) {
        this.id = id;
    }
    public Store(int id, Voucher voucher, User user, Color color, Nature nature, Group group, Model model, Integer storePairs, Integer salsePairs, Date entryDate, Double unitPrice, Double sellUnitPrice) {
       this.id = id;
       this.voucher = voucher;
       this.user = user;
       this.color = color;
       this.nature = nature;
       this.group = group;
       this.model = model;
       this.storePairs = storePairs;
       this.salsePairs = salsePairs;
       this.entryDate = entryDate;
       this.unitPrice = unitPrice;
       this.sellUnitPrice = sellUnitPrice;
    }
   
    @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id", unique=true, nullable=false)
    public int getId() {
        return this.id;
    }
    
    public void setId(int id) {
        this.id = id;
    }

    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="voucher_id")
    public Voucher getVoucher() {
        return this.voucher;
    }
    
    public void setVoucher(Voucher voucher) {
        this.voucher = voucher;
    }

    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="entry_user")
    public User getUser() {
        return this.user;
    }
    
    public void setUser(User user) {
        this.user = user;
    }

    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="color_id")
    public Color getColor() {
        return this.color;
    }
    
    public void setColor(Color color) {
        this.color = color;
    }

    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="nature_id")
    public Nature getNature() {
        return this.nature;
    }
    
    public void setNature(Nature nature) {
        this.nature = nature;
    }

    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="group_id")
    public Group getGroup() {
        return this.group;
    }
    
    public void setGroup(Group group) {
        this.group = group;
    }
    
    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="model_id")
    public Model getModel() {
    	return this.model;
    }
    
    public void setModel(Model model) {
    	this.model = model;
    }

    @Column(name="store_pairs")
    public Integer getStorePairs() {
        return this.storePairs;
    }
    
    public void setStorePairs(Integer storePairs) {
        this.storePairs = storePairs;
    }

    
    @Column(name="salse_pairs")
    public Integer getSalsePairs() {
        return this.salsePairs;
    }
    
    public void setSalsePairs(Integer salsePairs) {
        this.salsePairs = salsePairs;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="entry_date", length=19)
    public Date getEntryDate() {
        return this.entryDate;
    }
    
    public void setEntryDate(Date entryDate) {
        this.entryDate = entryDate;
    }

    
    @Column(name="unit_price", precision=22, scale=0)
    public Double getUnitPrice() {
        return this.unitPrice;
    }
    
    public void setUnitPrice(Double unitPrice) {
        this.unitPrice = unitPrice;
    }

    
    @Column(name="sell_unit_price", precision=22, scale=0)
    public Double getSellUnitPrice() {
        return this.sellUnitPrice;
    }
    
    public void setSellUnitPrice(Double sellUnitPrice) {
        this.sellUnitPrice = sellUnitPrice;
    }

}


